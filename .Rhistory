<<<<<<< HEAD
setwd(C:/Users/jenee/Documents/git_repos/grazing-gradients/data)
setwd("C:/Users/jenee/Documents/git_repos/grazing-gradients/data")
load("data/wio_gbr_herb_master.Rdata")
setwd("C:/Users/jenee/Documents/git_repos/grazing-gradients")
load("data/wio_gbr_herb_master.Rdata")
str(herb) ## check structure of data frame
unique(herb$dataset) ## check regions in herb
chagos <- herb[herb$dataset == 'Chagos',]
write.csv(chagos, file = 'data/chagos_master.csv')
View(chagos)
install.packages("ggplot2")
library(ggplot2)
levels(chagos$FG)
chagos$FG
str(herb) ## check structure of data frame
chagos$FG <- as.factor(chagos$FG)
levels(chagos$FG)
ggplot(chagos,aes(x=chagos$biomass.kgha)) +
geom_histogram(data=subset(chagos,chagos$FG == 'Herbivore Grazer'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(chagos,chagos$FG == 'Herbivore Browzer'),fill = "blue", alpha = 0.2) +
geom_histogram(data=subset(chagos,chagos$FG == 'Herbivore Scraper'),fill = "green", alpha = 0.2)
ggplot(aes(x=chagos$biomass.kgha)) +
geom_histogram(data=subset(chagos$FG == 'Herbivore Grazer'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(chagos$FG == 'Herbivore Browzer'),fill = "blue", alpha = 0.2) +
geom_histogram(data=subset(chagos$FG == 'Herbivore Scraper'),fill = "green", alpha = 0.2)
ggplot(chagos,aes(x=biomass.kgha)) +
geom_histogram(data=subset(chagos,FG == 'Herbivore Grazer'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(chagos,FG == 'Herbivore Browzer'),fill = "blue", alpha = 0.2) +
geom_histogram(data=subset(chagos,FG == 'Herbivore Scraper'),fill = "green", alpha = 0.2)
ggplot(chagos, aes(x=biomass.kgha, fill=GF)) + geom_density(alpha=.3)
ggplot(chagos, aes(x=biomass.kgha, fill=FG)) + geom_density(alpha=.3)
ggplot(chagos, aes(x=biomass.kgha, fill=FG)) + geom_density(alpha=.1)
ggplot(chagos, aes(x=biomass.kgha, fill=FG)) + geom_density(alpha=.3)
ggplot(chagos, aes(x=biomass.kgha, fill=FG)) + geom_density(alpha=.3, yScale="log10")
ggplot2.density(data=chagos, xName='biomass.kgha', groupName='FG',
showLegend=TRUE,yScale=log10)
install.packages("devtools")
library(devtools)
install_github("easyGgplot2", "kassambara")
ggplot2.density(data=chagos, xName='biomass.kgha', groupName='FG',
showLegend=TRUE,yScale=log10)
install_github("easyGgplot2", "kassambara/easyGgplot2")
install_github("easyGgplot2", "kassambara/easyGgplot2/easyGgplot2")
library(easyGgplot2)
ggplot2.density(data=chagos, xName='biomass.kgha', groupName='FG',
showLegend=TRUE,yScale=log10)
ggplot2.density(data=chagos, xName='biomass.kgha', groupName='FG',
showLegend=TRUE)
chagos$logbiomass <- log10(chagos$biomass.kgha)
ggplot(chagos, aes(x=logbiomass, fill=FG)) + geom_density(alpha=.3)
=======
load('data/wio_gbr_herb_master.Rdata')
str(herb) ## check structure of data frame
unique(herb$dataset) ## check regions in herb
maldives <- herb[herb$dataset == 'Maldives',]
write.csv(seychelles, file = 'data/seychelles_master.csv')
write.csv(maldives, file = 'data/maldives_master.csv')
levels(maldives$management)
levels(maldives$habitat)
levels(maldives$family)
levels(maldives$species)
any(is.na(maldives))
levels(maldives$FG)
maldgraze <- maldives[maldives$dataset == 'Herbivore Grazer',]
maldgraze
write.csv(maldives, file = 'data/maldives_master.csv')
write.csv(maldgraze, file = 'data/maldgraze_master.csv')
summary(maldives)
as.factor(maldives$FG)
as.factor(maldives$management)
as.factor(maldives$habitat)
maldives$species <- as.factor(maldives$species)
summary(maldives)
maldives$FG <- as.factor(maldives$FG)
summary(maldives)
plot(biomass.kgha, FG, data = maldives)
plot(maldives$biomass.kgha, maldives$FG)
boxplot(maldives$FG, maldives$biomass.kgha)
hist(maldives$FG[data$FG=='Herbivore Browser'])
hist(maldives$FG)
hist(maldives$biomass.kgha[data$FG=='Herbivore Browser'])
hist(maldives$biomass.kgha[maldives$FG==0])
par(mfrow=c(1,3))
hist(maldives$biomass.kgha[maldives$FG==0])
hist(maldives$biomass.kgha[maldives$FG==1])
hist(maldives$biomass.kgha[maldives$FG==2])
hist(maldives$biomass.kgha)
load('data/wio_gbr_herb_master.Rdata')
str(herb) ## check structure of data frame
unique(herb$dataset) ## check regions in herb
maldives <- herb[herb$dataset == 'Maldives',]
write.csv(maldives, file = 'data/maldives_master.csv')
summary(maldives)
View(herb)
str(maldives)
unique(maldives$FG)
unique(maldives$FG, maldives$habitat, maldives$management)
unique(maldives$habitat)
unique(maldives$management)
unique(maldives$family)
unique(maldives$species)
par(mfrow=c(1,3))
hist(maldives$biomass.kgha[maldives$FG==0])
hist(maldives$biomass.kgha[maldives$FG==1])
hist(maldives$biomass.kgha[maldives$FG==2])
hist(maldives$biomass.kgha[maldives$FG==0])
hist(maldives$biomass.kgha)
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"])
par(mfrow=c(1,3))
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"])
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"])
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"])
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], labels = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], lab = "Grazers")
help(hist)
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], main = "Grazers")
par(mfrow=c(1,3))
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], main = "Browsers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(1,3,5,7,9,11,13,15,17,>19) main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(1,3,5,7,9,11,13,15,17,19) main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 10 main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 10, main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 20, main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 20, right = TRUE, main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 20, xlim = 10, main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 20, xlim = (0,20), main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 20, xlim = (0, 20), main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(1:19), xlim = (0, 20), main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(1:19), xlim = (20), main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(1:19), xlim = (20), main = "Grazers")
breakvector = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20)
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = breakvector, xlim = (0, 12), main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = breakvector, xlim = (0, 12), main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(0:20), main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], main = "Browsers")
par(mfrow=c(3,1))
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], main = "Browsers")
par(mfrow=c(1,1))
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], main = "Browsers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(1:10) main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(1:10, >10) main = "Grazers")
par(mfrow=c(1,1))
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(1:10) main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], main = "Browsers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(log2(1:10)), main = "Grazers")
log2(1:10)
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = c(log2(1:30)), main = "Grazers")
grazer.breaks = 2^(floor(log2(min(maldives$biomass.kgha), max(log2(maldives$biomass.kgha)))))
grazer.breaks = 2^(floor(log2(min(maldives$biomass.kgha), log2(max(maldives$biomass.kgha)))))
grazer.breaks = 2^(floor(log2(min(maldives$biomass.kgha) : log2(max(maldives$biomass.kgha)))))
grazer.breaks
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = grazer.breaks, main = "Grazers")
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), breaks = grazer.breaks, main = "Grazers")
log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"])
grazer.breaks
grazer.breaks = 2^(floor(log2(min(maldives$biomass.kgha) : ceiling(log2(max(maldives$biomass.kgha))))))
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), breaks = grazer.breaks, main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], main = "Grazers")
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], main = "Grazers")
2Â°(c(-1:5))
2^(c(-1:5))
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), main = "Grazers", axis =F)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), main = "Grazers", axes =F)
axis(1, at=c(-1:5), breaks=2^(c(-1:5)))
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), main = "Grazers", axes =F)
axis(1, at=c(-1:5), labels=2^(c(-1:5)))
axis(1, at=c(-1:5), labels=2^(c(-1:5))); axis(2)
grazer.breaks = 2^(floor(log2(min(maldives$biomass.kgha) : ceiling(log2(max(maldives$biomass.kgha))))))
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), main = "Grazers", axes =F)
axis(1, at=c(-1:5), labels=2^(c(-1:5))); axis(2)
scraper.breaks = 2^(floor(log2(min(maldives$biomass.kgha) : ceiling(log2(max(maldives$biomass.kgha))))))
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers", axes =F)
scraper.breaks = 2^(floor(log2(min(maldives$biomass.kgha) : ceiling(log2(max(maldives$biomass.kgha))))))
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers", axes =F)
axis(1, at=c(-1:5), labels=2^(c(-1:5))); axis(2)
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], main = "Browsers")
grazer.breaks = 2^(floor(log2(min(maldives$biomass.kgha) : ceiling(log2(max(maldives$biomass.kgha))))))
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), main = "Grazers", axes =F)
axis(1, at=c(-1:5), labels=2^(c(-1:5))); axis(2)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers", axes =F)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers", axes =F)
axis(1, at=c(-1:5), labels=2^(c(-1:5))); axis(2)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers", axes =F)
axis(1, at=c(-1:5), labels=2^(c(-1:5))); axis(2)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers")
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers", breaks = scraper.breaks)
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 20, main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"], breaks = 30, main = "Grazers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], breaks = 30, main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], breaks = 60, main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], breaks = 60, xlim = c(1:50), main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], breaks = 60, xlim = 1:50, main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], breaks = 60, xlim = 1:50(60), main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"], breaks = 60, main = "Scrapers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], breaks = 10, main = "Browsers")
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], breaks = 30, main = "Browsers")
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Grazer"]), main = "Grazers", axes =F)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers", breaks = scraper.breaks)
axis(1, at=c(-1:5), labels=2^(c(-1:5))); axis(2)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"]), main = "Scrapers")
log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scrapers"])
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"]), main = "Scrapers")
axis(1, at=c(-1:300), labels=2^(c(-1:300))); axis(2)
axis(1, at=c(-1:300), labels=2^(c(-1:300))); axis(2)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"]), main = "Scrapers", xlab = F)
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Scraper"]), main = "Scrapers", axes = F)
axis(1, at=c(-1:300), labels=2^(c(-1:300))); axis(2)
hist(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"], breaks = 30, main = "Browsers")
hist(log2(maldives$biomass.kgha[maldives$FG=="Herbivore Browser"]), main = "Browsers", axes = F)
axis(1, at=c(-1:30), labels=2^(c(-1:30))); axis(2)
>>>>>>> b0117bdce670d27839bf4312eeb6da12d869943c
load('data/wio_gbr_herb_master.Rdata')
setwd('/Users/robins64/Documents/git_repos/grazing-gradients')
load('data/wio_gbr_herb_master.Rdata')
setwd('/Users/robins64/Documents/git_repos/grazing-gradients')
load('data/wio_gbr_herb_master.Rdata')
setwd('/Users/robins64/Documents/git_repos/grazing-gradients')
load('data/wio_gbr_herb_master.Rdata')
getwd()
setwd('/Users/robins64/Documents/git_repos/grazing-gradients')
load('data/wio_gbr_herb_master.Rdata')
library(tidyverse); theme_set(theme_bw())
ls()
head(herb)
sey<-herb %>% filter(dataset=='Seychelles')
biom<-sey %>%
group_by(site, date, transect, FG, management) %>%
summarise(biom = sum(biomass.kgha)) %>%
group_by(site, date, FG, management) %>%
summarise(biom = mean (biom))
ggplot(biom, aes(Year, log10(biom+1), fill=Management)) + geom_boxplot() + facet_wrap(~FG.fine)
ggplot(biom, aes(Year, log10(biom+1), fill=management)) + geom_boxplot() + facet_wrap(~FG)
ggplot(biom, aes(date, log10(biom+1), fill=management)) + geom_boxplot() + facet_wrap(~FG)
head(sey )
ggplot(sey, aes(mass.g, fill=FG)) + geom_density()
ggplot(sey, aes(log10(biomass.kg), fill=FG)) + geom_density()
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_density()
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram()
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(~FG)
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(~FG) + theme(legend.position=NULL)
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(~FG) + theme(legend.position=NA)
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(~FG) + theme(legend.position='none')
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
table(sey$species, sey$FG)
table(sey$FG, sey$species)
table(sey$FG)
sp<-table(sey$FG, sey$species)
table(sp$FG)
sp
table(sp)
sp<-aggregate(species ~ FG, sey, function = length(unique(x)))
sp<-aggregate(species ~ FG, sey, length(unique(x)))
sp<-aggregate(species ~ FG, sey, function(length(unique(x))))
sp<-aggregate(species ~ FG, sey, function(length(unique(x)))
sp<-aggregate(species ~ FG, sey, function{length(unique(x))})
sp<-aggregate(species ~ FG, sey, function length(unique(x)))
sp<-aggregate(species ~ FG, sey, function{x} length(unique(x)))
sp<-aggregate(species ~ FG, sey, function(x) length(unique(x)))
sp
sp
table(aggregate(species ~ FG, sey, function(x) length(unique(x))))
xtable(species ~ FG, sey, function(x) length(unique(x)))
table(species ~ FG, sey, function(x) length(unique(x)))
aggregate(species ~ FG, sey, function(x) length(unique(x)))
biom<-sey %>%
group_by(site, date, transect, FG, management) %>%
summarise(biom = sum(biomass.kgha)) %>%
group_by(site, date, FG, management) %>%
summarise(biom = mean (biom))
ggplot(biom, aes(date, log10(biom+1), fill=management)) + geom_boxplot() + facet_wrap(~FG)
---
title: "UVC datasets - exploring monitoring structure and herbivore assemblages"
output: html_notebook
---
```{r, echo=FALSE}
# data loads and working directory stuff
setwd('/Users/robins64/Documents/git_repos/grazing-gradients')
# Jan, Jeneen, Sam: add your working directories here
load('data/wio_gbr_herb_master.Rdata')
sey<-herb %>% filter(dataset=='Seychelles')
# load tidy packages and set ggplot theme because the default is shite
library(tidyverse); theme_set(theme_bw())
```
#### Seychelles
Seychelles data are 7m radius point counts conducted at 21 reef sites in 1994, 2005, 2008, 2011, 2014, 2017. Sites were stratified according to habitat (granite = 7, patch = 7, carbonate = 7) and management status (12 = fished, 9 = MPAs), and surround Mahe and Praslin (two inhabited islands).
Across all surveys, ```r length(unique(sey$species))``` herbivore species were recorded, which are composed of:
```{r, echo=F}
# count number of unique species per functional group
aggregate(species ~ FG, sey, function(x) length(unique(x)))
```
```{r, echo=F}
## estimate biomass gradient across management status
biom<-sey %>%
group_by(site, date, transect, FG, management) %>%
summarise(biom = sum(biomass.kgha)) %>%
group_by(site, date, FG, management) %>%
summarise(biom = mean (biom))
ggplot(biom, aes(date, log10(biom+1), fill=management)) + geom_boxplot() + facet_wrap(~FG)
```
```{r, echo=F}
## estimate size distribution by functional groups
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
```
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
---
title: "UVC datasets - exploring monitoring structure and herbivore assemblages"
output: html_notebook
---
```{r, echo=FALSE}
# data loads and working directory stuff
setwd('/Users/robins64/Documents/git_repos/grazing-gradients')
# Jan, Jeneen, Sam: add your working directories here
load('data/wio_gbr_herb_master.Rdata')
sey<-herb %>% filter(dataset=='Seychelles')
# load tidy packages and set ggplot theme because the default is shite
library(tidyverse); theme_set(theme_bw())
```
#### Seychelles
Seychelles data are 7m radius point counts conducted at 21 reef sites in 1994, 2005, 2008, 2011, 2014, 2017. Sites were stratified according to habitat (granite = 7, patch = 7, carbonate = 7) and management status (12 = fished, 9 = MPAs), and surround Mahe and Praslin (two inhabited islands).
Across all surveys, ```r length(unique(sey$species))``` herbivore species were recorded, which are composed of:
```{r, echo=F}
# count number of unique species per functional group
aggregate(species ~ FG, sey, function(x) length(unique(x)))
```
```{r, echo=F}
## estimate biomass gradient across management status
biom<-sey %>%
group_by(site, date, transect, FG, management) %>%
summarise(biom = sum(biomass.kgha)) %>%
group_by(site, date, FG, management) %>%
summarise(biom = mean (biom))
ggplot(biom, aes(date, log10(biom+1), fill=management)) + geom_boxplot() + facet_wrap(~FG)
```
```{r, echo=F}
## estimate size distribution by functional groups
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
```
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
## estimate size distribution by functional groups
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
## estimate size distribution by functional groups
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
## estimate size distribution by functional groups
ggplot(sey, aes(log10(biomass.kgha), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(log10(mass.g), fill=FG)) + geom_histogram() + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(mass.g, fill=FG)) + geom_histogram(binwidth=c(1, 10, 100, 1000)) + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(mass.g, fill=FG)) + geom_histogram(bins=c(1, 10, 100, 1000)) + facet_wrap(management~FG) + theme(legend.position='none')
?geom_histogram
ggplot(sey, aes(mass.g, fill=FG)) + geom_histogram(breaks=c(1, 10, 100, 1000)) + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(mass.g, fill=FG)) + geom_histogram(breaks=c(2^(c(1:5)))) + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(mass.g, fill=FG)) + geom_histogram(breaks=c(2^(c(1:10)))) + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)))) + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10))) + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none')
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none') + scale_x_continuous(labels=c(2^c(1:10)))
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none') + scale_x_continuous(breaks=c(2^c(1:10), labels=c(2^c(1:10)))
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none') + scale_x_continuous(breaks=c(2^c(1:10)), labels=c(2^c(1:10)))
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none') + scale_x_continuous(breaks=c(2^c(1:10)), labels=c(2^c(1:10)))
c(2^c(1:10)
)
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none') + scale_x_continuous(breaks=c(1:10), labels=c(2^c(1:10)))
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none') + scale_x_continuous(breaks=c(1:10), labels=c(2^c(1:10))) + scale_y_log10()
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none') + scale_x_continuous(breaks=c(1:10), labels=c(2^c(1:10)))
ggplot(sey, aes(log(mass.g, 2), fill=FG)) + geom_histogram(breaks=c(1:10)) + facet_wrap(management~FG) + theme(legend.position='none') + scale_x_continuous(breaks=c(1:10), labels=c(2^c(1:10))) + labs (x='Mass (g)')
